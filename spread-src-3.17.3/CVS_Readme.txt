Documentation on using Spread from CVS.
--------------------------------------
The main development is done on the HEAD branch. (default)

There may be release branches for older releases if needed.


To checkout a copy

cvs -d :ext:cvs.spread.org:/storage/cvsroot checkout spread

You should now have a 'spread' directory which contains the subdirectories:

    * spread/daemon with the Spread daemon and C library code.
    * spread/javalib with the Java library code.
    * spread/javaapps with sample Java applications.
    * spread/perl with the Perl library code. 


To Build from a clean CVS checkout
----------------------------------
You normally just need to run:

./configure
make parser
make 
su  (if you use the standard /usr/local install target)
make install

The only extra is the "make parser" line which is needed to build
the lex/yacc files. They are not auto-generated by the make file
because of the numerous buggy lex/yacc implementations out there. 
This way you can make sure you only generate the parsers from a
machine with a good implementation.

If you change 'configure.in' or related files, you need to regenerate the 
configure script.

From the spread/daemon/ directory,
to rebuild the configure script you need to run:
  
autoconf -I buildtools
    
If you add new header defines you may also need to run
autoheader -I buildtools


To make a new release of Spread
-------------------------------

- Code Changes in release commit

  x) Update the Java build files javaapps/build.xml 
     <property name="version" value="3.17.2"/>

     Also update the spread version in SpreadConnection.java

  x) Update Spread version number in daemon/spread_params.h
     SP_MAJOR_VERSION, SP_MINOR_VERSION, SP_PATCH_VERSION

  x) Update the SPREAD_VERSION define in sp.h

  x) Update build date in spread.c and monitor.c initial Alarm prints.
 
  x) After release source tar is built and parser is built. Make sure
     lex.yy.c does not #include <unistd.h> without protecting it by 
     #ifndef ARCH_PC_WIN95 ... #endif
